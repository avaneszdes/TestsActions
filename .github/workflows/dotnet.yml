name: Run tests on push

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - main
      - dev


jobs:

  log-to-telegram:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '7.x' ]

    steps:
      - name: Checkout repository
        id: vars
        shell: bash
        run: |
          # setting to ${{ steps.vars.outputs.BRANCH_NAME }}
          echo "##[set-output name=BRANCH_NAME;]$(echo ${GITHUB_REF#refs/heads/})"
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Dotnet restore
        working-directory: GithubActions
        run: dotnet restore

      - name: Dotnet build
        working-directory: GithubActions
        run: dotnet build --configuration Release --no-restore

      - name: Run .NET tests with reporter
        id: tests
        working-directory: GithubActionsTests
        run: |
          dotnet test --configuration Release --logger "trx;LogFileName=test_results.trx" /nologo

      - name: Generate detailed test report
        id: detailed_report
        uses: bibipkins/dotnet-test-reporter@v1.4.0
        with:
          verbosity: detailed
          reportType: trx
          targetDirectory: ./target/test-results
          reportsDirectory: ./target/test-reports

      - name: Parse test report and format results
        id: format_results
        run: |
          python -c "import xml.etree.ElementTree as ET; tests = ET.parse('target/test-reports/index.html').getroot(); passed = int(tests.find('.//passed').text); failed = int(tests.find('.//failed').text); skipped = int(tests.find('.//skipped').text); time = float(tests.find('.//time').text); print(f'✔️ Passed: {passed}\n❌ Failed: {failed}\n⚠️ Skipped: {skipped}\n⏱️ Time: {time:.2f}s')"

      - name: Send message to telegram on push
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: html
          message: |
            <b><u>${{ github.actor }}</u></b> created commit:
            <b><u>Commit message:</u></b> ${{ github.event.commits[0].message }}

            <b><u>Repository:</u></b> ${{ github.repository }}
            <b><u>Branch:</u></b> ${{ steps.vars.outputs.BRANCH_NAME }}

            <b><u>See changes:</u></b> https://github.com/${{ github.repository }}/commit/${{github.sha}}

            <b><u>Tests:</u></b> <b>${{ steps.format_results.outputs }}</b>         
      